/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/12.0.9
 * Generated at: 2024-08-05 08:59:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.webcontent.birt.pages.dialog;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.eclipse.birt.report.presentation.aggregation.IFragment;
import org.eclipse.birt.report.context.BaseAttributeBean;
import org.eclipse.birt.report.IBirtConstants;
import org.eclipse.birt.report.utility.ParameterAccessor;
import org.eclipse.birt.report.resource.BirtResources;

public final class DialogContainerFragment_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("org.eclipse.birt.report.resource.BirtResources");
    _jspx_imports_classes.add("org.eclipse.birt.report.context.BaseAttributeBean");
    _jspx_imports_classes.add("org.eclipse.birt.report.utility.ParameterAccessor");
    _jspx_imports_classes.add("org.eclipse.birt.report.presentation.aggregation.IFragment");
    _jspx_imports_classes.add("org.eclipse.birt.report.IBirtConstants");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, false, 0, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write('\n');
      org.eclipse.birt.report.presentation.aggregation.IFragment fragment = null;
      fragment = (org.eclipse.birt.report.presentation.aggregation.IFragment) _jspx_page_context.getAttribute("fragment", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (fragment == null){
        throw new java.lang.InstantiationException("bean fragment not found within scope");
      }
      out.write('\n');
      org.eclipse.birt.report.context.BaseAttributeBean attributeBean = null;
      attributeBean = (org.eclipse.birt.report.context.BaseAttributeBean) _jspx_page_context.getAttribute("attributeBean", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (attributeBean == null){
        throw new java.lang.InstantiationException("bean attributeBean not found within scope");
      }
      out.write('\n');
      out.write('\n');
      out.write("\n");
      out.write("<div id=\"");
      out.print( fragment.getClientId( ) );
      out.write("\" class=\"dialogBorder\" style=\"display:none;position:absolute;z-index:220\">\n");
      out.write("	<iframe id=\"");
      out.print( fragment.getClientId( ) );
      out.write("iframe\"  name=\"");
      out.print( fragment.getClientId( ) );
      out.write("iframe\" style=\"z-index:-1; display: none; left:0px; top:0px;\n");
      out.write("					 background-color: #ff0000; opacity: .0; filter: alpha(opacity = 0); position: absolute;\" frameBorder=\"0\" scrolling=\"no\" src=\"birt/pages/common/blank.html\">\n");
      out.write("	</iframe>	\n");
      out.write("	<div id=\"");
      out.print( fragment.getClientId( ) );
      out.write("dialogTitleBar\" class=\"dialogTitleBar dTitleBar\">\n");
      out.write("		<div class=\"dTitleTextContainer\">\n");
      out.write("			<table style=\"width: 100%; height: 100%;\">\n");
      out.write("				<tr>\n");
      out.write("					<td class=\"dialogTitleText dTitleText\">\n");
      out.write("						\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");
      out.write("		</div>\n");
      out.write("		<div class=\"dialogCloseBtnContainer dCloseBtnContainer\">\n");
      out.write("			<table style=\"width: 100%; height: 100%; border-collapse: collapse\">\n");
      out.write("				<tr>\n");
      out.write("					<td>\n");
      out.write("						<label class=\"birtviewer_hidden_label\" for=\"");
      out.print( fragment.getClientId( ) );
      out.write("dialogCloseBtn\">\n");
      out.write("							");
      out.print( 
								BirtResources.getMessage( "birt.viewer.dialog.close" )
							);
      out.write("\n");
      out.write("						</label>						\n");
      out.write("						<div id=\"");
      out.print( fragment.getClientId( ) );
      out.write("dialogCloseBtn\" class=\"dialogCloseBtn dCloseBtn\"/>\n");
      out.write("					</td>\n");
      out.write("				</tr>\n");
      out.write("			</table>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("	<!-- overflow is set as workaround for Mozilla bug https://bugzilla.mozilla.org/show_bug.cgi?id=167801 -->		\n");
      out.write("	<div  class=\"dialogBackground\" style=\"overflow: auto;\"> \n");
      out.write("		<div class=\"dBackground\">\n");
      out.write("			<div class=\"dialogContentContainer\" id=\"");
      out.print( fragment.getClientId( ) );
      out.write("dialogContentContainer\">\n");
      out.write("				");

					if ( fragment != null )
					{
						fragment.callBack( request, response );
					}
				
      out.write("\n");
      out.write("			</div>\n");
      out.write("			<div class=\"dialogBtnBarContainer\">\n");
      out.write("				<div>\n");
      out.write("					<div class=\"dBtnBarDividerTop\">\n");
      out.write("					</div>\n");
      out.write("					<div class=\"dBtnBarDividerBottom\">\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<div class=\"dialogBtnBar\">\n");
      out.write("					<div id=\"");
      out.print( fragment.getClientId( ) );
      out.write("dialogCustomButtonContainer\" class=\"dialogBtnBarButtonContainer\">\n");
      out.write("						<div id=\"");
      out.print( fragment.getClientId( ) );
      out.write("okButton\">\n");
      out.write("							<div id=\"");
      out.print( fragment.getClientId( ) );
      out.write("okButtonLeft\" class=\"dialogBtnBarButtonLeftBackgroundEnabled\"></div>\n");
      out.write("							<div id=\"");
      out.print( fragment.getClientId( ) );
      out.write("okButtonRight\" class=\"dialogBtnBarButtonRightBackgroundEnabled\"></div>\n");
      out.write("							<input type=\"button\" value=\"");
      out.print( BirtResources.getHtmlMessage( "birt.viewer.dialog.ok" ) );
      out.write("\" \n");
      out.write("								title=\"");
      out.print( BirtResources.getHtmlMessage( "birt.viewer.dialog.ok" ) );
      out.write("\"  \n");
      out.write("								class=\"dialogBtnBarButtonText dialogBtnBarButtonEnabled\"/>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"dialogBtnBarDivider\"></div>\n");
      out.write("						<div id=\"");
      out.print( fragment.getClientId( ) );
      out.write("cancelButton\">\n");
      out.write("							<div class=\"dialogBtnBarButtonLeftBackgroundEnabled\"></div>\n");
      out.write("							<div class=\"dialogBtnBarButtonRightBackgroundEnabled\"></div>\n");
      out.write("							<input type=\"button\" value=\"");
      out.print( BirtResources.getHtmlMessage( "birt.viewer.dialog.cancel" ));
      out.write("\" \n");
      out.write("								title=\"");
      out.print( BirtResources.getHtmlMessage( "birt.viewer.dialog.cancel" ));
      out.write("\"  \n");
      out.write("								class=\"dialogBtnBarButtonText dialogBtnBarButtonEnabled\"/>\n");
      out.write("						</div> \n");
      out.write("					</div>							\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</div>\n");
      out.write("</div>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
